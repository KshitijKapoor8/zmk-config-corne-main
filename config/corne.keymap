/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <6 18 30 39 40 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 41>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };

        wm_1: wm_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_1";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_1)>, <&kp LA(LS(NUMBER_1))>;
        };

        wm_2: wm_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_2";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2)>, <&kp LA(LS(NUMBER_2))>;
        };

        wm_3: wm_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_3";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_3)>, <&kp LA(LS(NUMBER_3))>;
        };

        wm_4: wm_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_4";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_4)>, <&kp LA(LS(NUMBER_4))>;
        };

        wm_5: wm_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_5";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_5)>, <&kp LA(LS(N5))>;
        };

        wm_6: wm_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_6";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_6)>, <&kp LA(LS(NUMBER_6))>;
        };

        wm_7: wm_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_7";
            #binding-cells = <0>;
            bindings = <&kp LA(N7)>, <&kp LA(LS(N7))>;
        };

        wm_b: wm_b {
            compatible = "zmk,behavior-tap-dance";
            label = "WM_B";
            #binding-cells = <0>;
            bindings = <&kp LA(B)>, <&kp LA(LS(B))>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Copy {
            bindings = <&kp LC(INSERT)>;
            key-positions = <3 2 4>;
            layers = <0>;
        };

        Paste {
            bindings = <&kp LS(INS)>;
            key-positions = <14 15 16>;
            layers = <0>;
        };

        Cut {
            bindings = <&kp LS(DELETE)>;
            key-positions = <26 28 27>;
            layers = <0>;
        };

        prog-less {
            bindings = <&kp LT>;
            key-positions = <32 19>;
            layers = <0>;
        };

        prog-equals {
            bindings = <&kp EQUAL>;
            key-positions = <19 21 20>;
            layers = <0>;
        };

        prog-colon {
            bindings = <&kp COLON>;
            key-positions = <7 8 9>;
            layers = <0>;
        };

        enie {
            bindings = <&kp RA(N)>;
            key-positions = <36 19>;
            layers = <0>;
        };

        enie-mac {
            bindings = <&enie_mac>;
            key-positions = <36 19 16>;
            layers = <0>;
        };

        huh {
            bindings = <&kp QUESTION>;
            key-positions = <14 15 4>;
        };

        chin {
            bindings = <&kp EXCLAMATION>;
            key-positions = <25 26 3>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 18>;
        };

        under {
            bindings = <&kp UNDER>;
            key-positions = <31 30>;
        };

        accent {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <16 20>;
        };
    };

    macros {
        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(DEL)>;
            label = "CUT";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(INS)>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(INS)>;
            label = "PASTE";
        };

        enie_mac: enie_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp N &kp N>;
            label = "ENIE_MAC";
        };

        left_word: left_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT)>;
            label = "LEFT_WORD";
        };

        right_word: right_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT)>;
            label = "RIGHT_WORD";
        };

        fast_del: fast_del {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(BACKSPACE)>;
            label = "FAST_DEL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            display-name = "ALPHA";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q             &kp W        &kp E                &kp R              &kp T        &kp Y            &kp U               &kp I                 &kp O             &kp P                     &kp TAB
&kp LCTRL   &hml LEFT_META A  &hml LALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G        &kp H            &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&kp LSHFT   &kp Z             &kp X        &kp C                &kp V              &kp B        &kp N            &kp M               &kp COMMA             &kp PERIOD        &kp SLASH                 &key_repeat
                                           &lt 4 LEFT_ALT       &lt 1 SPACE        &kp ENTER    &lt 3 BACKSPACE  &lt 5 SPACE         &lt 2 LA(BACKSPACE)
            >;
        };

        num-nav {
            display-name = "NUM-NAV";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &sk LEFT_ALT    &kp N7        &kp N8        &kp N9        &trans       &trans          &left_word      &trans        &right_word  &kp PAGE_UP    &kp DELETE
&kp CAPS    &sk LEFT_SHIFT  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT    &kp INS        &trans
&kp N0      &sk LCTRL       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans       &trans          &kp HOME        &cut          &kp END      &kp PAGE_DOWN  &trans
                                          &trans        &trans        &kp ENTER    &fast_del       &kp SPACE       &trans
            >;
        };

        media {
            display-name = "MEDIA";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &trans       &trans     &trans          &trans            &trans        &trans        &trans
&trans  &trans  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans       &trans     &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&trans  &trans  &trans             &trans            &trans           &trans       &trans     &trans          &trans            &trans        &trans        &trans
                                   &trans            &trans           &kp ENTER    &kp SPACE  &kp SPACE       &trans
            >;
        };

        sym {
            display-name = "SYMBOLS";
            bindings = <
&trans  &kp TILDE  &kp DOLLAR     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT    &trans     &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp GRAVE        &trans
&trans  &kp UNDER  &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE       &kp HASH   &kp EQUAL          &kp MINUS      &kp PLUS          &kp EXCLAMATION  &trans
&trans  &trans     &kp AMPERSAND  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN    &kp AMPS   &kp SLASH          &kp ASTERISK   &kp BACKSLASH     &kp CARET        &trans
                                  &trans                &trans                 &kp ENTER      &kp SPACE  &kp SPACE          &trans
            >;
        };

        fun {
            display-name = "FUNCTIONS";
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans      &kp N7        &kp N8        &kp N9        &trans        &ext_power EP_ON
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &bootloader
                         &trans  &trans  &trans    &trans      &trans        &trans
            >;

            label = "FUNCTION";
        };

        wm {
            bindings = <
&trans          &trans  &wm_7  &wm_b   &kp LS(LA(Q))  &kp LS(LG(SPACE))    &trans     &sk LS(LEFT_ALT)    &trans         &trans     &trans                 &trans
&trans          &trans  &wm_4  &wm_5   &wm_6          &kp LA(SPACE)        &kp LA(H)  &kp LA(J)           &kp LA(K)      &kp LA(L)  &kp LA(LS(SEMICOLON))  &trans
&kp LEFT_SHIFT  &trans  &wm_1  &wm_2   &wm_3          &trans               &trans     &kp LA(LEFT_ARROW)  &kp LA(RIGHT)  &trans     &trans                 &trans
                               &trans  &trans         &trans               &trans     &trans              &trans
            >;

            label = "WM";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        android-shortcuts {
            if-layers = <1 3>;
            then-layer = <6>;
        };
    };
};
